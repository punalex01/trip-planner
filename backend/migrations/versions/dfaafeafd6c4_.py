"""empty message

Revision ID: dfaafeafd6c4
Revises: 28fcafea9da5
Create Date: 2024-03-01 01:20:02.685404

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dfaafeafd6c4'
down_revision = '28fcafea9da5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group_payments',
    sa.Column('trip_id', sa.UUID(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('is_returned', sa.Boolean(), nullable=False),
    sa.Column('lender_id', sa.Integer(), nullable=True),
    sa.Column('total', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['lender_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['trip_id'], ['trips.trip_id'], ),
    sa.PrimaryKeyConstraint('payment_id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('group_payment_lendees',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('lendee_id', sa.Integer(), nullable=True),
    sa.Column('is_returned', sa.Boolean(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['lendee_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['group_payments.payment_id'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    with op.batch_alter_table('trips', schema=None) as batch_op:
        batch_op.add_column(sa.Column('trip_id', sa.Integer(), nullable=False))
        batch_op.alter_column('uuid',
               existing_type=sa.UUID(),
               nullable=True)
        batch_op.create_unique_constraint(None, ['uuid'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('trips', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('uuid',
               existing_type=sa.UUID(),
               nullable=False)
        batch_op.drop_column('trip_id')

    op.drop_table('group_payment_lendees')
    op.drop_table('group_payments')
    # ### end Alembic commands ###
